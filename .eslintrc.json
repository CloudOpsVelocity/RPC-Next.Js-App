{
  "root": true,
  "parserOptions": {
    "ecmaVersion": 2020,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "plugin:jsx-a11y/recommended",
    "next",
    "next/core-web-vitals"
  ],
  "rules": {
    // "react/react-in-jsx-scope": "off",
    "jsx-a11y/click-events-have-key-events": "off",
    "jsx-a11y/no-noninteractive-element-interactions": "off",
    "no-unused-vars": "off",
    "jsx-a11y/no-static-element-interactions": "off",
    "no-undef": "off",
    "no-empty-pattern": "off",
    "react/no-array-index-key": "warn", // Avoid using array indices as keys
    "react/jsx-no-duplicate-props": "error", // Prevent duplicate props in JSX
    "react/jsx-no-useless-fragment": "error", // Avoid unnecessary fragments
    "react/jsx-boolean-value": ["error", "never"], // Enforce shorthand for boolean values in JSX
    "react/self-closing-comp": "error", // Enforce self-closing tags when no children are present
    "react/no-danger": "warn", // Warn when using dangerouslySetInnerHTML
    "react/no-deprecated": "error", // Prevent usage of deprecated methods
    "react/no-unused-state": "warn", // Warn if a state property is not used
    "react/no-unsafe": "error", // Prevent usage of unsafe lifecycle methods
    "react/prefer-es6-class": "error", // Enforce ES6 classes for React components
    "react/jsx-pascal-case": "error", // Enforce PascalCase for user-defined JSX components

    // Hooks-specific rules
    "react-hooks/rules-of-hooks": "error", // Enforces the rules of Hooks
    "react-hooks/exhaustive-deps": "warn"
  },
  "settings": {
    "react": {
      "version": "detect"
    },
    "import/resolver": {
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      }
    }
  }
}
